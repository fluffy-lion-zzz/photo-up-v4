[{"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/index.js":"1","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/App.js":"2","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Login/Login.js":"3","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Navigation/Navigation.js":"4","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/services/routes.js":"5","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Account/Account.js":"6","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/SignUp/SignUp.js":"7","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Home/Home.js":"8","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Landing/Landing.js":"9","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/firebase/index.js":"10","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/firebase/firebase.js":"11","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/firebase/context.js":"12","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Firebase/index.js":"13","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Firebase/firebase.js":"14","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Firebase/context.js":"15","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/SomeComponent.js":"16","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/services/userAccount.js":"17","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/SignUp/SignUpForm.js":"18","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/services/AuthContext.js":"19","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Logout/Logout.js":"20","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/services/PrivateRoute.js":"21","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/UpdateDisplayName/UpdateDisplayName.js":"22","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/ViewPhotos/ViewPhotos.js":"23","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Loading/Loading.js":"24","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Uploader/Uploader.js":"25","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/MetaSearch/MetaSearch.js":"26","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Uploader/ChooseImage.js":"27","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Uploader/ImageInfo.js":"28","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Uploader/ImageLocation.js":"29","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/AddMeta/AddMeta.js":"30"},{"size":334,"mtime":1612463809278,"results":"31","hashOfConfig":"32"},{"size":2024,"mtime":1613649113596,"results":"33","hashOfConfig":"32"},{"size":1925,"mtime":1613515118782,"results":"34","hashOfConfig":"32"},{"size":631,"mtime":1613426107199,"results":"35","hashOfConfig":"32"},{"size":254,"mtime":1615495517939,"results":"36","hashOfConfig":"32"},{"size":1472,"mtime":1614632746638,"results":"37","hashOfConfig":"32"},{"size":465,"mtime":1613559088036,"results":"38","hashOfConfig":"32"},{"size":895,"mtime":1615495479960,"results":"39","hashOfConfig":"32"},{"size":180,"mtime":1612379631219,"results":"40","hashOfConfig":"32"},{"size":126,"mtime":1612388544283,"results":"41","hashOfConfig":"32"},{"size":468,"mtime":1612463414032,"results":"42","hashOfConfig":"32"},{"size":108,"mtime":1612385056346,"results":"43","hashOfConfig":"32"},{"size":130,"mtime":1613075143124,"results":"44","hashOfConfig":"32"},{"size":522,"mtime":1613389644522,"results":"45","hashOfConfig":"32"},{"size":308,"mtime":1613068320358,"results":"46","hashOfConfig":"32"},{"size":344,"mtime":1612475844254,"results":"47","hashOfConfig":"32"},{"size":2005,"mtime":1613559860124,"results":"48","hashOfConfig":"32"},{"size":2536,"mtime":1613925238156,"results":"49","hashOfConfig":"32"},{"size":292,"mtime":1613490474783,"results":"50","hashOfConfig":"32"},{"size":392,"mtime":1613490034107,"results":"51","hashOfConfig":"32"},{"size":639,"mtime":1613560980688,"results":"52","hashOfConfig":"32"},{"size":1290,"mtime":1613515021064,"results":"53","hashOfConfig":"32"},{"size":2828,"mtime":1614117026119,"results":"54","hashOfConfig":"32"},{"size":206,"mtime":1613650812273,"results":"55","hashOfConfig":"32"},{"size":5123,"mtime":1615499039441,"results":"56","hashOfConfig":"32"},{"size":3855,"mtime":1615402783995,"results":"57","hashOfConfig":"32"},{"size":1283,"mtime":1614802630595,"results":"58","hashOfConfig":"32"},{"size":742,"mtime":1615318077904,"results":"59","hashOfConfig":"32"},{"size":3012,"mtime":1615327813618,"results":"60","hashOfConfig":"32"},{"size":3989,"mtime":1615757957020,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"s0kgl3",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/index.js",[],["130","131"],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/App.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Login/Login.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Navigation/Navigation.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/services/routes.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Account/Account.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/SignUp/SignUp.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Home/Home.js",["132"],"import React, { useContext } from 'react'\nimport './Home.css'\nimport SomeComponent from '../SomeComponent'\nimport MetaSearch from '../MetaSearch/MetaSearch'\nimport * as ROUTES from '../../services/routes'\n\n// import {AuthContext} from '../../services/AuthContext'\nimport UserContext from '../../services/AuthContext'\nimport ViewPhotos from '../ViewPhotos/ViewPhotos'\nimport Uploader from '../Uploader/Uploader'\n\n\n\nconst Home = () => {\nconst user = useContext(UserContext)\n// console.log(user)\n    return (\n        <div className=\"homeWrapper\">\n            <h1>home</h1>\n            <SomeComponent />\n                <p>{user.email}</p>\n            <div>\n           {/* {authValue.user == null ? <p>not logged</p> :\n           <p>user logged in</p>} */}\n            </div>\n            <Uploader />\n             <ViewPhotos />\n           <MetaSearch />\n        </div>\n    )\n}\n\n\nexport default Home","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Landing/Landing.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/firebase/index.js",[],["133","134"],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/firebase/firebase.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/firebase/context.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Firebase/index.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Firebase/firebase.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Firebase/context.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/SomeComponent.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/services/userAccount.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/SignUp/SignUpForm.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/services/AuthContext.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Logout/Logout.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/services/PrivateRoute.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/UpdateDisplayName/UpdateDisplayName.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/ViewPhotos/ViewPhotos.js",["135","136","137","138"],"import React, { useState, useEffect } from 'react'\n\nimport app from 'firebase/app'\nimport \"firebase/storage\"\n// import { useState } from 'react'\nimport './ViewPhotos.css'\nimport Loading from '../Loading/Loading'\n\nconst ViewPhotos = () => {\n    const [imgData, setImgData] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [folder, setFolder] = useState([])\n    const [folderSelect, setFolderSelect] = useState(\"\")\n\n    const viewFolder = () => {\n        const storage = app.storage()\n        const storageRef = storage.ref()\n        storageRef.list().then(res => {\n            res.prefixes.map((prefixes) => {\n                folder.includes(prefixes.name) ?\n                console.log(\"folder name already included\") :\n                setFolder(folder => [...folder, prefixes.name])\n            })\n        })\n    }\n    let getData = () => {\n        setImgData([])\n        const storage = app.storage()\n        const storageRef = storage.ref(folderSelect +'/')\n        const newImg = storageRef.list()\n        newImg.then((res) => {\n            res.items.map((item)=> {\n                item.getDownloadURL().then((url) => {\n                    imgData.includes(url) ?\n                        console.log('url already there') :\n                        setImgData(imgData => [...imgData, url])\n                })\n            })\n            setLoading(false)\n        }) \n        \n        \n    }\n    const ListDisplay = ({ url }) => {\n        return (\n            <div className=\"imgWrapper\">\n                <img src={url}/>\n            </div>\n        )\n    }\n    const folderHandler = (event) => {\n        let selected = event.target.value\n        setFolderSelect(selected)\n        console.log(selected)\n    }\n    const SelectFolder = () => {\n        return (\n            <div>\n                <form>\n                    <label for=\"selectAFolder\">select a folder</label>\n                    <select onChange={folderHandler} name=\"selectAFolder\">{folder.map((item, index) => <option key={index}>{item}</option>)}</select>\n\n                </form>\n            </div>\n        )\n    }\n    \n    useEffect(() => {\n            getData()\n            viewFolder()\n            // console.log(folderSelect)\n            \n    },[folderSelect])\n\n        return(\n            <div id=\"viewPhotos\">\n                <h3>view photos component</h3>\n                <SelectFolder />\n                <div className=\"imagesContainer\">\n                    \n                    {loading ? \n                    <Loading />\n                    : (\n                    imgData.map(url => {\n                        return <ListDisplay url={url} />\n                    })\n                    )\n                    }\n                    \n                \n                </div>\n            </div>\n        )\n}\n\nexport default ViewPhotos","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Loading/Loading.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Uploader/Uploader.js",["139","140","141","142","143","144","145","146","147","148"],"import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom'\nimport './Uploader.css'\nimport app from 'firebase/app'\nimport 'firebase/storage'\nimport ChooseImage from './ChooseImage'\nimport ImageInfo from './ImageInfo'\nimport ImageLocation from './ImageLocation'\nimport AddMeta from '../AddMeta/AddMeta'\n\nimport * as ROUTES from '../../services/routes'\n// import metaHandler from '../AddMeta/AddMeta'\n// import AddMeta from '../AddMeta/AddMeta'\n\nconst Uploader = () => {\n    const storage = app.storage()\n    const storageRef = storage.ref()\n    const [newFolder, setNewFolder] = useState(\"\")\n    const [folder, setFolder] = useState([])\n    const [folderOption, setFolderOption] = useState(false)\n    const [imageName, setImageName] = useState(\"\")\n    const [imageFile, setImageFile] = useState(\"\")\n    const [folderSelected, setFolderSelected] = useState(false)\n    //needed? \\/ \n    const [folderDisplay, setFolderDisplay] = useState(\"\")\n    const [metaUploadRef, setMetaUploadRef] = useState(\"\")\n    const [download, setDownload] = useState(\"\")\n    //TESTING\n    // ..TESTING\n    // ....TESTING\n\n    // const [meta1, setMeta1] = useState(\"\")\n\n    // const meta = useState({\n    //     customMetadata: {\n    //         customMetaOne: \"test\",\n    //         customMetaTwo: \"\",\n    //         customMetaThree: \"\",\n    //         customMetaFour: \"\",\n    //         customMetaFive: \"\"\n    //     }\n    // })\n\n    // CAUTION CAUTION CAUTION\n    //CHANGED TO FALSE FOR META TESTING\n    //CAUTION CAUTION CAUTION\n    const [step, setStep] = useState(true)\n\n    const ViewFolder = () => {\n        return( \n        <div>\n            <h1>being stored in: {folderDisplay}</h1>\n        </div>\n        )\n    }\n    const funcTest = () => {\n        console.log(\"hit funcTest\")\n    }\n\n    const newFolderHandler = (event) => {\n        event.preventDefault()\n        // view where use will be saving \n        setFolderDisplay(\"\")\n        storageRef.child(newFolder)\n\n        setFolder(folder => [...folder, newFolder])\n        setFolderDisplay(newFolder)\n        setNewFolder(\"\")\n        setFolderSelected(true)\n    }\n\n    const getFolders = () => {\n        storageRef.list().then(res => {\n            res.prefixes.map((prefixes) => {\n                folder.includes(prefixes.name) ?\n                console.log(\"folder name already included\") :\n                setFolder(folder => [...folder, prefixes.name])\n            })\n        })\n    }\n\n    const handleUpload = (event) => {\n        event.preventDefault()\n        let name = null\n            imageName === \"\" ?\n            name = imageFile.name :\n            name = imageName\n        const uploadRef = storageRef.child(`${newFolder}/${name}`)\n        setMetaUploadRef(uploadRef)\n        uploadRef.put(imageFile).then((snapshot) => {\n            console.log(imageFile)\n        })\n        \n        .catch((error) => {\n            console.log(error)\n        })\n\n    }\n\n    const handleImageFile = (event) => {\n        const image = event.target.files[0]\n        setImageFile(imageFile => (image))\n    }\n\n    const handleFolderView = () => {\n        folderOption ? setFolderOption(false) : setFolderOption(true)\n    }\n\n\n    useEffect(() => {\n        getFolders()\n        \n    },[])\n \n    \n    return (\n        <Router>\n        <div className=\"uploaderWrapper\">\n            \n            {/* {step ?  */}\n                <ImageLocation\n                // setStep={setStep}\n                    setFolderDisplay={setFolderDisplay}\n                    folderSelected={folderSelected} \n                    setFolderSelected={setFolderSelected}\n                    folderOption={folderOption}\n                    newFolder={newFolder}\n                    setNewFolder={setNewFolder}\n                    folder={folder}\n                    handleFolderView={handleFolderView}\n                    newFolderHandler={newFolderHandler}\n                />\n                {/* : */}\n                <div>\n                <ViewFolder />\n                 \n                    <ChooseImage \n                        imageFile={imageFile}\n                        setImageFile={setImageFile}\n                    />\n                <form \n                onSubmit={handleUpload}\n                >\n                    <ImageInfo \n                    metaUploadRef={metaUploadRef}\n                        funcTest={funcTest}\n                        imageFile={imageFile}\n                        imageName={imageName}\n                        setImageName={setImageName}\n                    />\n                    {/* <AddTestMeta /> */}\n\n                    {/* <button onClick={() => setStep(true)}>go back</button> */}\n\n                    <button type=\"submit\">upload</button>\n                </form>\n                </div>\n            {/* } */}\n                <button type=\"submit\">form handler</button>\n                {/* {metaUploadRef !== \"\" ? <Redirect to=\"/addmeta\"  /> : null} */}\n                <AddMeta photoRef={metaUploadRef}/>\n            \n            </div>\n        </Router>\n       \n        \n    )\n}\n\nexport default Uploader","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/MetaSearch/MetaSearch.js",["149","150"],"import React, { useState, useEffect } from 'react'\nimport './MetaSearch.css'\nimport app from 'firebase/app'\nimport 'firebase/storage'\n\n\nconst MetaSearch = () => {\n    const [parentFolder, setParentFolder] = useState([])\n    const [searchedImages, setSearchedImages] = useState([])\n    const [meta, setMeta] = useState({\n        customMetadata: {\n            customMetaOne: \"\",\n            customMetaTwo: \"\",\n            customMetaThree: \"\",\n            customMetaFour: \"\",\n            customMetaFive: \"\"\n        }\n    })\n\n    const selectTags = () => {\n        const metaTag = \"metatest\"\n        //store tag\n        const storage = app.storage()\n        const storageRef = storage.ref()\n\n\n        parentFolder.forEach(folderName => {\n            storage.refFromURL(`${folderName}/`).listAll()\n            .then((image) => {\n                let item = image.items\n                item.forEach(info => {\n                    info.getMetadata()\n                    .then((metadata) => {\n                        if(!metadata.customMetadata){\n                            console.log(\"no custom\")\n                        }\n                        else if (\n                            //TESTING DELETE .CUSTOM\n                            metadata.customMetadata.custom === metaTag ||\n                            //TESTING DELETE .CUSTOM\n                            metadata.customMetadata.customMetaOne === metaTag ||\n                            metadata.customMetadata.customMetaTwo === metaTag ||\n                            metadata.customMetadata.customMetaThree === metaTag ||\n                            metadata.customMetadata.customMetaFour === metaTag ||\n                            metadata.customMetadata.customMetaFive === metaTag\n                            ){\n                            storage.ref(metadata.fullPath).getDownloadURL()\n                            .then((img) => {\n                                    if (searchedImages.includes(img)){\n                                        console.log(\"already in\")\n                                    }else{\n                                        setSearchedImages(searchedImages => [...searchedImages, img])\n                                    }\n                                }\n                            )\n                        }else{\n                            console.log(\"not found\")\n                        }\n                    })\n                    \n                })\n            })\n        })\n    }\n    useEffect(() => {\n        storage.ref().list().then((items)=>{\n               setParentFolder(items.prefixes)\n            })\n            console.log(searchedImages)\n            \n    },[searchedImages])\n\n\n\n    // WILL BE PART OF ADD META COMPONENT\n    const storage = app.storage()\n    const storageRef = storage.ref('akira/akira-bike.jpg')\n\n    const getMeta = () => {\n        storageRef.getMetadata()\n        .then((metadata) => {\n            console.log(metadata)\n        })\n       \n    }\n\n    const addCustomMeta = (event) => {\n        event.preventDefault()\n        storageRef.updateMetadata(meta)\n        .then((metadata) => {\n            console.log(metadata)\n        }).catch((error) => {\n            console.log(\"error: \", error)\n        })\n    }\n\n    return(\n        <div className=\"metaWrapper\">\n            <button onClick={getMeta}>get meta</button>\n            <form onSubmit={addCustomMeta}>\n                <input\n                    onChange={((event) => {\n                        setMeta({\n                            customMetadata: {\n                            customMetaOne: event.target.value\n                        }})\n                    })}\n                ></input>\n                <button type=\"submit\">submit</button>\n            </form>\n            <button onClick={selectTags}>select</button>\n        </div>\n    )\n}\n\nexport default MetaSearch\n","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Uploader/ChooseImage.js",["151","152","153","154"],"import React, { useState, useEffect } from 'react'\nimport app from 'firebase/app'\nimport 'firebase/storage'\nimport './ChooseImage.css'\n// import ImageInfo from './ImageInfo'\n\n\nconst ChooseImage = ({ imageFile, setImageFile}) => {\n    // const [imageFile, setImageFile] = useState(\"\")\n    const [imagePreview, setImagePreview] = useState(\"\")\n\n    const handleImageFile = (event) => {\n        const image = event.target.files[0]\n        \n        \n            let reader = new FileReader()\n            let url = reader.readAsDataURL(image)\n            reader.onloadend = (e) => {\n                setImagePreview(reader.result)\n            }\n            \n            // console.log(url)\n    \n        setImageFile(imageFile => (image))\n    }\n    return (\n        <div className=\"chooseImg\">\n            <label for=\"file\">choose image to upload</label>\n                <input\n\n                name=\"file\"\n                type=\"file\"\n                accept=\"image/*\"\n                \n                onChange={handleImageFile}\n                >\n                    \n                </input>\n                <p>image</p>\n                <img id=\"imagePreview\" src={imagePreview} />\n                {/* <ImageInfo imageFile={imageFile}/> */}\n        </div>\n    )\n}\n\nexport default ChooseImage","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Uploader/ImageInfo.js",[],"/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/Uploader/ImageLocation.js",["155"],"import React, { useState } from 'react'\n\nimport './ImageLocation.css'\n\nconst ImageLocation = ({ setStep, setFolderDisplay, newFolderHandler, folderOption, newFolder, setNewFolder, handleFolderView, folder}) => {\n    const [name, setName] = useState(\"\")\n\n    const FolderName = () => {\n        // event.preventDefault()\n        console.log(\"selected: \", name)\n        setNewFolder(name)\n        // setFolderSelected(true)\n        return (\n            <div>\n            {name === \"\" ||\n            name === \" \" ||\n            name === undefined ?\n            <div><p>please select a folder</p></div> :\n            <div><p>you selected {name}</p></div> \n            }\n            </div>\n        )\n        \n    }\n\n    const FolderForm = () => {\n        return (\n        <form onSubmit={newFolderHandler}>\n            <input\n                value={newFolder}\n                onChange={(event) => {\n                    setNewFolder(event.target.value)\n                    \n                }}\n                >\n                </input>\n                <h3>your creating a new folder called {newFolder}</h3>\n                    {folder.includes(newFolder) ? \n                    <p>this folder has already been created</p> :\n                    <></>\n                    }\n                <button  disabled={isInvalid}>create new folder</button>\n                <p>or...</p><button onClick={handleFolderView}>add to existing folder</button>\n            </form>\n        )\n    }\n\n    const FolderConfirm = () => {\n        return (\n            <div>\n                <button onClick={setStep(false)}>continue to upload</button>\n            </div>\n        )\n    }\n\n    const FolderArrItems = () => {\n        return (\n            <div onClick={(event) => {\n                setName(event.target.value)\n                setFolderDisplay(event.target.value)\n            }} >{folder.map((item, index) => \n            <button type=\"text\" value={item} key={index}>{item}</button>\n            )}\n        </div>\n        )\n    }\n    const isInvalid = \n        newFolder === String ||\n        newFolder === \"\" ||\n        folder.includes(newFolder)\n\n    return(\n        <div>\n            \n            <div className=\"imageLocation\">\n            <h1>image location</h1>\n                {folderOption ?\n                <div> \n                    <FolderForm />\n                    {newFolder === \"\" ?\n                    <p>no value</p> :\n                    <p>{newFolder}</p>\n                    }\n                </div>\n                :\n                <div>\n                    <FolderArrItems />\n                    <FolderName />\n                    <div>\n                        <p>or...</p>\n                        <button onClick={handleFolderView}>create new folder</button>\n                    </div>\n                </div>\n                }\n                {/* {name !== \"\" ?\n                <FolderConfirm /> :\n                <></>\n                } */}\n            </div>\n        </div>\n    )\n}\n\nexport default ImageLocation","/Users/codenation/Desktop/apprenticeshipProjects/photoUploader/photoUpV4/photo-uploader-v4/src/components/AddMeta/AddMeta.js",["156","157","158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":5,"column":13,"nodeType":"166","messageId":"167","endLine":5,"endColumn":19},{"ruleId":"160","replacedBy":"168"},{"ruleId":"162","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":19,"column":41,"nodeType":"172","messageId":"173","endLine":19,"endColumn":43},{"ruleId":"170","severity":1,"message":"171","line":32,"column":33,"nodeType":"172","messageId":"173","endLine":32,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":47,"column":17,"nodeType":"176","endLine":47,"endColumn":33},{"ruleId":"177","severity":1,"message":"178","line":73,"column":7,"nodeType":"179","endLine":73,"endColumn":21,"suggestions":"180"},{"ruleId":"164","severity":1,"message":"181","line":2,"column":35,"nodeType":"166","messageId":"167","endLine":2,"endColumn":43},{"ruleId":"164","severity":1,"message":"182","line":2,"column":45,"nodeType":"166","messageId":"167","endLine":2,"endColumn":50},{"ruleId":"164","severity":1,"message":"165","line":11,"column":13,"nodeType":"166","messageId":"167","endLine":11,"endColumn":19},{"ruleId":"164","severity":1,"message":"183","line":27,"column":12,"nodeType":"166","messageId":"167","endLine":27,"endColumn":20},{"ruleId":"164","severity":1,"message":"184","line":27,"column":22,"nodeType":"166","messageId":"167","endLine":27,"endColumn":33},{"ruleId":"164","severity":1,"message":"185","line":47,"column":12,"nodeType":"166","messageId":"167","endLine":47,"endColumn":16},{"ruleId":"164","severity":1,"message":"186","line":47,"column":18,"nodeType":"166","messageId":"167","endLine":47,"endColumn":25},{"ruleId":"170","severity":1,"message":"171","line":74,"column":41,"nodeType":"172","messageId":"173","endLine":74,"endColumn":43},{"ruleId":"164","severity":1,"message":"187","line":100,"column":11,"nodeType":"166","messageId":"167","endLine":100,"endColumn":26},{"ruleId":"177","severity":1,"message":"188","line":113,"column":7,"nodeType":"179","endLine":113,"endColumn":9,"suggestions":"189"},{"ruleId":"164","severity":1,"message":"190","line":24,"column":15,"nodeType":"166","messageId":"167","endLine":24,"endColumn":25},{"ruleId":"177","severity":1,"message":"191","line":71,"column":7,"nodeType":"179","endLine":71,"endColumn":23,"suggestions":"192"},{"ruleId":"164","severity":1,"message":"193","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"164","severity":1,"message":"194","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":11},{"ruleId":"164","severity":1,"message":"195","line":17,"column":17,"nodeType":"166","messageId":"167","endLine":17,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":40,"column":17,"nodeType":"176","endLine":40,"endColumn":61},{"ruleId":"164","severity":1,"message":"196","line":48,"column":11,"nodeType":"166","messageId":"167","endLine":48,"endColumn":24},{"ruleId":"164","severity":1,"message":"197","line":10,"column":12,"nodeType":"166","messageId":"167","endLine":10,"endColumn":18},{"ruleId":"164","severity":1,"message":"198","line":10,"column":20,"nodeType":"166","messageId":"167","endLine":10,"endColumn":29},{"ruleId":"164","severity":1,"message":"199","line":25,"column":11,"nodeType":"166","messageId":"167","endLine":25,"endColumn":18},{"ruleId":"164","severity":1,"message":"200","line":41,"column":11,"nodeType":"166","messageId":"167","endLine":41,"endColumn":19},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'ROUTES' is defined but never used.","Identifier","unusedVar",["201"],["202"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getData' and 'viewFolder'. Either include them or remove the dependency array.","ArrayExpression",["203"],"'Redirect' is defined but never used.","'Route' is defined but never used.","'download' is assigned a value but never used.","'setDownload' is assigned a value but never used.","'step' is assigned a value but never used.","'setStep' is assigned a value but never used.","'handleImageFile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFolders'. Either include it or remove the dependency array.",["204"],"'storageRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'storage'. Either include it or remove the dependency array.",["205"],"'useEffect' is defined but never used.","'app' is defined but never used.","'url' is assigned a value but never used.","'FolderConfirm' is assigned a value but never used.","'amount' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'getMeta' is assigned a value but never used.","'TagInput' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [folderSelect, getData, viewFolder]",{"range":"212","text":"213"},"Update the dependencies array to be: [getFolders]",{"range":"214","text":"215"},"Update the dependencies array to be: [searchedImages, storage]",{"range":"216","text":"217"},[2239,2253],"[folderSelect, getData, viewFolder]",[3281,3283],"[getFolders]",[2665,2681],"[searchedImages, storage]"]